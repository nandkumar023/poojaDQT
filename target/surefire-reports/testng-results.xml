<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="3" total="4" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="DocquityWeb.DocQT.Test.GrandRoundTest" duration-ms="14463" started-at="2022-07-29T17:02:38 IST" finished-at="2022-07-29T17:02:53 IST">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="14463" started-at="2022-07-29T17:02:38 IST" finished-at="2022-07-29T17:02:53 IST">
      <class name="DocquityWeb.DocQT.Test.GrandRoundTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:DocquityWeb.DocQT.Test.GrandRoundTest@2a3b5b47]" name="beforeSuite" is-config="true" duration-ms="5" started-at="2022-07-29T17:02:38 IST" finished-at="2022-07-29T17:02:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:DocquityWeb.DocQT.Test.GrandRoundTest@2a3b5b47]" name="beforeTest" is-config="true" duration-ms="57" started-at="2022-07-29T17:02:38 IST" finished-at="2022-07-29T17:02:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:DocquityWeb.DocQT.Test.GrandRoundTest@2a3b5b47]" name="beforeMethod" is-config="true" duration-ms="3" started-at="2022-07-29T17:02:39 IST" finished-at="2022-07-29T17:02:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void DocquityWeb.DocQT.Test.GrandRoundTest.verifyOptionsUnderLearning(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="initialization()[pri:0, instance:DocquityWeb.DocQT.Test.GrandRoundTest@2a3b5b47]" name="initialization" is-config="true" duration-ms="1748" started-at="2022-07-29T17:02:39 IST" finished-at="2022-07-29T17:02:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method status="FAIL" signature="verifyOptionsUnderLearning(java.lang.String, java.lang.String)[pri:0, instance:DocquityWeb.DocQT.Test.GrandRoundTest@2a3b5b47]" name="verifyOptionsUnderLearning" duration-ms="11068" started-at="2022-07-29T17:02:40 IST" data-provider="loginTest" finished-at="2022-07-29T17:02:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[9716720366]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Webinars Text is not visible expected [Webins] but found [Webinars]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Webinars Text is not visible expected [Webins] but found [Webinars]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at DocquityWeb.DocQT.Page.GrandRoundPage.verifyWebinarsIsVisible(GrandRoundPage.java:175)
at DocquityWeb.DocQT.Test.GrandRoundTest.verifyOptionsUnderLearning(GrandRoundTest.java:55)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:110)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOptionsUnderLearning -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:DocquityWeb.DocQT.Test.GrandRoundTest@2a3b5b47]" name="afterMethod" is-config="true" duration-ms="857" started-at="2022-07-29T17:02:51 IST" finished-at="2022-07-29T17:02:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void DocquityWeb.DocQT.Test.GrandRoundTest.verifyOptionsUnderLearning(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyOptionsUnderLearning status=FAILURE method=GrandRoundTest.verifyOptionsUnderLearning(java.lang.String, java.lang.String)[pri:0, instance:DocquityWeb.DocQT.Test.GrandRoundTest@2a3b5b47] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDownAfterTest()[pri:0, instance:DocquityWeb.DocQT.Test.GrandRoundTest@2a3b5b47]" name="tearDownAfterTest" is-config="true" duration-ms="353" started-at="2022-07-29T17:02:52 IST" finished-at="2022-07-29T17:02:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method status="PASS" signature="afterMainClass()[pri:0, instance:DocquityWeb.DocQT.Test.GrandRoundTest@2a3b5b47]" name="afterMainClass" is-config="true" duration-ms="0" started-at="2022-07-29T17:02:52 IST" finished-at="2022-07-29T17:02:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMainClass -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:DocquityWeb.DocQT.Test.GrandRoundTest@2a3b5b47]" name="afterSuite" is-config="true" duration-ms="1" started-at="2022-07-29T17:02:53 IST" finished-at="2022-07-29T17:02:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- DocquityWeb.DocQT.Test.GrandRoundTest -->
    </test> <!-- Command line test -->
  </suite> <!-- DocquityWeb.DocQT.Test.GrandRoundTest -->
</testng-results>
